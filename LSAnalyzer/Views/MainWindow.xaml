<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:converter="clr-namespace:LSAnalyzer.ViewModels.ValueConverter"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:local="clr-namespace:LSAnalyzer"
        xmlns:ViewModels="clr-namespace:LSAnalyzer.ViewModels"
        x:Class="LSAnalyzer.Views.MainWindow"
        mc:Ignorable="d"
        Title="LSAnalyzer" Height="450" Width="800" WindowState="Maximized">
    <Window.DataContext>
        <ViewModels:MainWindow/>
    </Window.DataContext>
    <Window.Resources>
        <converter:BoolToAnalysisMode x:Key="BoolToAnalysisConverter"/>
        <converter:BoolToVisibility x:Key="BoolToVisibilityConverter"/>
        <converter:EmptyEnumerableToVisibilityCollapsed x:Key="EmptyEnumerableToVisibilityCollapsedConverter"/>
        <converter:InverseBool x:Key="InverseBoolConverter"/>
        <converter:NullToBool x:Key="NullToBoolConverter"/>
        <converter:NullToVisibilityCollapsed x:Key="NullToVisibilityCollapsedConverter"/>
        <converter:VariablesToString x:Key="VariablesToStringConverter"/>
        <DataTemplate DataType="{x:Type ViewModels:AnalysisPresentation}">
            <Border BorderBrush="Gray" BorderThickness="0,0,0,0.5">
                <Expander IsExpanded="True" Margin="5">
                    <Expander.Header>
                        <Grid HorizontalAlignment="{Binding HorizontalAlignment, RelativeSource={RelativeSource AncestorType=ContentPresenter}, Mode=OneWayToSource}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{Binding Analysis.ShortInfo}" FontWeight="Bold"/>
                            <Button x:Name="buttonRemoveAnalysis" Grid.Column="1" HorizontalAlignment="Right" Height="22" ContentTemplate="{StaticResource Trash}" Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=DataContext.RemoveAnalysisCommand}" CommandParameter="{Binding Mode=OneTime}"/>
                        </Grid>
                    </Expander.Header>
                    <StackPanel Orientation="Vertical" Margin="10,10,10,10">
                        <Grid Margin="0,0,0,10">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="85"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="File:"/>
                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Analysis.AnalysisConfiguration.FileName}"/>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Subset:" Visibility="{Binding Analysis.SubsettingExpression, Converter={StaticResource NullToVisibilityCollapsedConverter}}"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Analysis.SubsettingExpression}" Visibility="{Binding Analysis.SubsettingExpression, Converter={StaticResource NullToVisibilityCollapsedConverter}}"/>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Dataset Type:"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Analysis.AnalysisConfiguration.DatasetType.Name}"/>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Variables:"/>
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Analysis.Vars, Converter={StaticResource VariablesToStringConverter}}"/>
                            <TextBlock Grid.Row="4" Grid.Column="0" Text="Group by:" Visibility="{Binding Analysis.GroupBy, Converter={StaticResource EmptyEnumerableToVisibilityCollapsedConverter}}"/>
                            <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Analysis.GroupBy, Converter={StaticResource VariablesToStringConverter}}" Visibility="{Binding Analysis.GroupBy, Converter={StaticResource EmptyEnumerableToVisibilityCollapsedConverter}}"/>
                            <Button x:Name="buttonDownloadXlsx" Grid.Column="2" Grid.Row="0" Grid.RowSpan="5" VerticalAlignment="Bottom" Height="22" ContentTemplate="{StaticResource Download}" Click="ButtonDownloadXlsx_Click" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}"/>
                        </Grid>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <DataGrid Grid.Row="0" x:Name="dataGridResults" IsReadOnly="True" ItemsSource="{Binding DataView}" AutoGeneratingColumn="DataGridResults_AutoGeneratingColumn" MinHeight="22" MaxHeight="450" VerticalAlignment="Top">

                                </DataGrid>
                                <fa:ImageAwesome Grid.Row="0" Icon="SunOutline" Spin="True" VerticalAlignment="Top" Height="20" Foreground="Gray" Visibility="{Binding IsBusy, Converter={StaticResource BoolToVisibilityConverter}}"/>
                                <DataGrid Grid.Row="1" Margin="0,10,0,0" x:Name="dataGridEta" IsReadOnly="True" ItemsSource="{Binding TableEta}" AutoGeneratingColumn="DataGridResults_AutoGeneratingColumn" MinHeight="22" MaxHeight="450" VerticalAlignment="Top" Visibility="{Binding TableEta, Converter={StaticResource NullToVisibilityCollapsedConverter}}">

                                </DataGrid>
                                <StackPanel Grid.Row="1" Margin="0,10,0,0"  Orientation="Vertical" VerticalAlignment="Top" Visibility="{Binding TableCov, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                                    <TextBlock Text="(Co)variances:"/>
                                    <DataGrid x:Name="dataGridCov" IsReadOnly="True" ItemsSource="{Binding TableCov}" AutoGeneratingColumn="DataGridResults_AutoGeneratingColumn" MinHeight="22" MaxHeight="450">

                                    </DataGrid>
                                </StackPanel>
                                <StackPanel Grid.Row="1" Margin="0,10,0,0"  Orientation="Vertical" VerticalAlignment="Top" Visibility="{Binding TableBivariate, Converter={StaticResource NullToVisibilityCollapsedConverter}}">
                                    <TextBlock Text="Bivariate measures of association:"/>
                                    <DataGrid x:Name="dataGridBivariate" IsReadOnly="True" ItemsSource="{Binding TableBivariate}" AutoGeneratingColumn="DataGridResults_AutoGeneratingColumn" MinHeight="22" MaxHeight="450">

                                    </DataGrid>
                                </StackPanel>
                            </Grid>
                            <StackPanel Grid.Column="1" Margin="10,0,0,0">
                                <StackPanel>
                                    <StackPanel.Visibility>
                                        <Binding Path="HasTableAverage" Converter="{StaticResource BoolToVisibilityConverter}">
                                            <Binding.ConverterParameter>
                                                <sys:Boolean>true</sys:Boolean>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </StackPanel.Visibility>
                                    <CheckBox IsChecked="{Binding UseTableAverage}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                                        <CheckBox.Content>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Calculate table average"/>
                                                <ContentControl ContentTemplate="{StaticResource InfoTipInline}" ToolTip="Table average used by OECD/IEA for reporting of international average (mean of means)"/>
                                            </StackPanel>
                                        </CheckBox.Content>
                                    </CheckBox>
                                    <Separator/>
                                </StackPanel>
                                <CheckBox Content="Show N cases (unweighted)" IsChecked="{Binding ShowNcases}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                                    <CheckBox.Visibility>
                                        <Binding Path="HasNcasesToggle" Converter="{StaticResource BoolToVisibilityConverter}">
                                            <Binding.ConverterParameter>
                                                <sys:Boolean>true</sys:Boolean>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </CheckBox.Visibility>
                                </CheckBox>
                                <CheckBox Content="Show N weighted" IsChecked="{Binding ShowNweight}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                                    <CheckBox.Visibility>
                                        <Binding Path="HasNweightToggle" Converter="{StaticResource BoolToVisibilityConverter}">
                                            <Binding.ConverterParameter>
                                                <sys:Boolean>true</sys:Boolean>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </CheckBox.Visibility>
                                </CheckBox>
                                <CheckBox Content="Show p values" IsChecked="{Binding ShowPValues}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                                    <CheckBox.Visibility>
                                        <Binding Path="HasPValues" Converter="{StaticResource BoolToVisibilityConverter}">
                                            <Binding.ConverterParameter>
                                                <sys:Boolean>true</sys:Boolean>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </CheckBox.Visibility>
                                </CheckBox>
                                <CheckBox IsChecked="{Binding ShowFMI}" IsEnabled="{Binding IsBusy, Converter={StaticResource InverseBoolConverter}}">
                                    <CheckBox.Content>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock Text="Show FMI"/>
                                            <ContentControl ContentTemplate="{StaticResource InfoTipInline}" ToolTip="FMI = fraction of missing information: Amount of variance in coefficient that comes from multiple imputation (or PVs) compared to replication."/>
                                        </StackPanel>
                                    </CheckBox.Content>
                                    <CheckBox.Visibility>
                                        <Binding Path="HasFMI" Converter="{StaticResource BoolToVisibilityConverter}">
                                            <Binding.ConverterParameter>
                                                <sys:Boolean>true</sys:Boolean>
                                            </Binding.ConverterParameter>
                                        </Binding>
                                    </CheckBox.Visibility>
                                </CheckBox>
                            </StackPanel>
                        </Grid>
                    </StackPanel>
                </Expander>
            </Border>
        </DataTemplate>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem x:Name="menuItemAnalysisSelectFile" Header="Select File ..." Click="MenuItemAnalysisSelectFile_Click"/>
                <MenuItem x:Name="menuItemAnalysisSubsetting" Header="Subsetting ..." IsEnabled="{Binding AnalysisConfiguration, Converter={StaticResource NullToBoolConverter}}" Click="MenuItemAnalysisSubsetting_Click"/>
            </MenuItem>
            <MenuItem Header="_Analysis" IsEnabled="{Binding AnalysisConfiguration, Converter={StaticResource NullToBoolConverter}}">
                <MenuItem x:Name="menuItemAnalysisUnivar" Header="Univariate (means and SD) ..." Click="MenuItemAnalysisUnivar_Click"/>
                <MenuItem x:Name="menuItemAnalysisFrequencies" Header="Frequencies ..." Click="MenuItemAnalysisFreq_Click"/>
                <MenuItem x:Name="menuItemAnalysisPercentiles" Header="Percentiles ..." Click="MenuItemAnalysisPercentiles_Click"/>
                <Separator/>
                <!--<MenuItem x:Name="menuItemAnalysisCrosstabs" Header="Crosstabulation ..."/>-->
                <MenuItem x:Name="menuItemAnalysisMeanDiff" Header="Difference in mean ..." Click="MenuItemAnalysisMeanDiff_Click"/>
                <MenuItem x:Name="menuItemAnalysisCorrelations" Header="Correlations ..." Click="MenuItemAnalysisCorrelations_Click"/>
                <Separator/>
                <MenuItem x:Name="menuItemAnalysisRegression" Header="Linear Regression ..." Click="MenuItemAnalysisLinreg_Click"/>
                <MenuItem x:Name="menuItemAnalysisLogistReg" Header="Logistic Regression ..." Click="MenuItemAnalysisLogistReg_Click"/>
                <!--<MenuItem x:Name="menuItemAnalysisMultilevel" Header="Multilevel Regression ..."/>-->
                <!--<MenuItem x:Name="menuItemAnalysisPathmodel" Header="Pathmodel ..."/>-->
            </MenuItem>
            <MenuItem Header="_Config">
                <MenuItem x:Name="menuItemDatasetTypes" Header="Dataset-Types ..." Click="MenuItemDatasetTypes_Click" />
                <MenuItem x:Name="menuItemSystemSettings" Header="System ..." Click="MenuItemSystemSettings_Click"/>
            </MenuItem>
        </Menu>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>                            
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="File: "/>
                    <TextBlock x:Name="textBlockAnalysisDatasetFile" Text="{Binding AnalysisConfiguration.FileName}"/>
                </StackPanel>
            </StatusBarItem>
            <Separator Grid.Column="1"/>
            <StatusBarItem Grid.Column="2">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Subset: "/>
                    <TextBlock x:Name="textBlockAnalysisSubsetting" Text="{Binding SubsettingExpression}"/>
                </StackPanel>
            </StatusBarItem>
            <Separator Grid.Column="3"/>
            <StatusBarItem Grid.Column="4">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Dataset Type: "/>
                    <TextBlock x:Name="textBlockAnalysisDatasetType" Text="{Binding AnalysisConfiguration.DatasetType.Name}"/>
                </StackPanel>
            </StatusBarItem>
            <Separator Grid.Column="5"/>
            <StatusBarItem Grid.Column="6">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Mode: "/>
                    <TextBlock x:Name="textBlockAnalysisMode" Text="{Binding AnalysisConfiguration.ModeKeep, Converter={StaticResource BoolToAnalysisConverter}}"/>
                </StackPanel>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="200"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer Grid.Column="0" VerticalScrollBarVisibility="Auto">
                <ItemsControl x:Name="itemsControlAnalysesFull" ItemsSource="{Binding Analyses}"/>
            </ScrollViewer>
            <ScrollViewer Grid.Column="1" VerticalScrollBarVisibility="Auto">
                <ItemsControl x:Name="itemsControlAnalysesOutline" ItemsSource="{Binding Analyses}" BorderThickness="0.5,0,0,0" BorderBrush="Gray">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <Button Padding="5" BorderThickness="0,0,0,0.5" Background="Transparent" HorizontalContentAlignment="Left" Click="ItemsControlAnalysesOutline_Click">
                                <Button.Content>
                                    <TextBlock Text="{Binding Analysis.ShortInfo}" TextWrapping="Wrap"/>
                                </Button.Content>
                            </Button>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </ScrollViewer>
        </Grid>
    </DockPanel>
</Window>
