<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:converter="clr-namespace:LSAnalyzer.ViewModels.ValueConverter"
        xmlns:local="clr-namespace:LSAnalyzer.Views"
        xmlns:ViewModels="clr-namespace:LSAnalyzer.ViewModels" x:Class="LSAnalyzer.Views.ConfigDatasetTypes"
        mc:Ignorable="d"
        Title="Dataset Types" WindowStartupLocation="CenterScreen" Closing="WindowClosing" SizeToContent="WidthAndHeight" ResizeMode="NoResize">
    <Window.DataContext>
        <ViewModels:ConfigDatasetTypes/>
    </Window.DataContext>
    <Window.Resources>
        <converter:BooleanAnd x:Key="BooleanAndConverter"/>
        <converter:DictionaryHasElementToBool x:Key="DictionaryHasElementToBoolConverter"/>
        <converter:IndexToBool x:Key="IndexToBoolConverter"/>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0" Margin="10,10,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ComboBox x:Name="comboBoxSelectDatasetType" Grid.Column="0" VerticalAlignment="Top" Width="312" ItemsSource="{Binding DatasetTypes}" DisplayMemberPath="Name" SelectedItem="{Binding SelectedDatasetType, Mode=TwoWay}"/>
            <Button x:Name="buttonNewDatasetType" Grid.Column="1" Content="New" HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top" Height="22" Width="78" Command="{Binding NewDatasetTypeCommand, Mode=OneWay}"/>
            <Button x:Name="buttonImportDatasetType" Grid.Column="2" Content="Import ..." HorizontalAlignment="Left" Margin="5,0,0,0" VerticalAlignment="Top" Height="22" Width="78" Click="ButtonImportDatasetType_Click"></Button>
            <Button x:Name="buttonRemoveDatasetType" Grid.Column="3" Content="Remove" HorizontalAlignment="Right" Margin="30,0,0,0" VerticalAlignment="Top" Height="22" Width="78" IsEnabled="{Binding SelectedIndex, ElementName=comboBoxSelectDatasetType, Converter={StaticResource IndexToBoolConverter}}" Click="ButtonRemoveDatasetTypeClick"/>
        </Grid>
        <Label Grid.Row="1" Content="Name:" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="textBoxName" Grid.Row="1" Margin="106,4,10,0" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.Name, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top">
            <ToolTipService.ToolTip>
                <TextBlock Text="{Binding SelectedDatasetType.Errors[Name]}" Foreground="Red"/>
            </ToolTipService.ToolTip>
            <ToolTipService.IsEnabled>
                <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="Name"/>
            </ToolTipService.IsEnabled>
        </TextBox>
        <Label Content="Group:" Grid.Row="1" HorizontalAlignment="Left" Margin="10,26,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="textBoxGroup" Grid.Row="1" Margin="106,30,10,0" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.Group, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"/>
        <Label Content="Description:" Grid.Row="1" HorizontalAlignment="Left" Margin="10,52,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="textBoxDescription" Grid.Row="1" Margin="106,56,10,0" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.Description, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top"/>
        <StackPanel Grid.Row="1" Margin="14,84,0,0" Orientation="Horizontal" VerticalAlignment="Top">
            <CheckBox x:Name="checkboxAutoEncapsulate" Content="Auto-encapsulate regular expressions" IsChecked="{Binding SelectedDatasetType.AutoEncapsulateRegex}"/>
            <ContentControl ContentTemplate="{StaticResource InfoTipInline}" ToolTip="If checked, any regular expression XY will be treated as ^XY$ when used."/>
        </StackPanel>
        <Label Content="Weight variable:" Grid.Row="1" HorizontalAlignment="Left" Margin="10,104,0,0" VerticalAlignment="Top"/>
        <TextBox x:Name="textBoxWeightVariable" Grid.Row="1" Margin="106,108,10,0" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.Weight, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="200" HorizontalAlignment="Left">
            <ToolTipService.ToolTip>
                <TextBlock Text="{Binding SelectedDatasetType.Errors[Weight]}" Foreground="Red"/>
            </ToolTipService.ToolTip>
            <ToolTipService.IsEnabled>
                <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="Weight"/>
            </ToolTipService.IsEnabled>
        </TextBox>
        <StackPanel Grid.Row="1" Margin="10,130,0,0" VerticalAlignment="Top" Orientation="Horizontal">
            <Label Content="ID variable:"/>
            <ContentControl ContentTemplate="{StaticResource InfoTipInline}" ToolTip="Providing a unique ID variable is not necessary but will guarantee sorting and correct associations between cases when using MI indicator variable."/>
        </StackPanel>
        <TextBox x:Name="textBoxIdVariable" Grid.Row="1" Margin="106,134,10,0" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.IDvar, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top" Width="200" HorizontalAlignment="Left"/>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <GroupBox Grid.Column="0" Margin="10,10,5,0" VerticalAlignment="Stretch">
                <GroupBox.Header>
                    <TextBlock FontWeight="DemiBold"><Run Text="Multiple Imputation / Plausible Values"/></TextBlock>
                </GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Text="Number of multiple imputations or plausible values:" Margin="0,5,0,0"/>
                    <TextBox x:Name="textBoxNMI" TextWrapping="Wrap" Width="50" Text="{Binding SelectedDatasetType.NMI, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="{Binding SelectedDatasetType.Errors[NMI]}" Foreground="Red"/>
                        </ToolTipService.ToolTip>
                        <ToolTipService.IsEnabled>
                            <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="NMI"/>
                        </ToolTipService.IsEnabled>
                    </TextBox>
                    <Rectangle Height="1" Stroke="Gray" Margin="0,10,0,10"/>
                    <TextBlock TextWrapping="Wrap" Text="Variable indicating imputation count:"/>
                    <TextBox x:Name="textBoxMIVariable" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.MIvar, UpdateSourceTrigger=PropertyChanged}" Width="200" HorizontalAlignment="Left">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="{Binding SelectedDatasetType.Errors[MIvar]}" Foreground="Red"/>
                        </ToolTipService.ToolTip>
                        <ToolTipService.IsEnabled>
                            <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="MIvar"/>
                        </ToolTipService.IsEnabled>
                    </TextBox>
                    <TextBlock TextWrapping="Wrap" Text="OR"/>
                    <TextBlock TextWrapping="Wrap" Text="Variables with plausible values:"/>
                    <DataGrid ItemsSource="{Binding SelectedDatasetType.PVvarsList}" AutoGenerateColumns="False" Height="105" Width="400">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Regex" Binding="{Binding Regex}" Width="150"/>
                            <DataGridTextColumn Header="Display name" Binding="{Binding DisplayName}" Width="150"/>
                            <DataGridCheckBoxColumn Header="Mandatory" Binding="{Binding Mandatory}" Width="75"/>
                        </DataGrid.Columns>
                        <ToolTipService.ToolTip>
                            <TextBlock Text="{Binding SelectedDatasetType.Errors[PVvarsList]}" Foreground="Red"/>
                        </ToolTipService.ToolTip>
                        <ToolTipService.IsEnabled>
                            <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="PVvarsList"/>
                        </ToolTipService.IsEnabled>
                    </DataGrid>
                </StackPanel>
            </GroupBox>
            <GroupBox Grid.Column="1"  Margin="5,10,10,0" VerticalAlignment="Top" Width="400">
                <GroupBox.Header>
                    <TextBlock FontWeight="DemiBold"><Run Text="Replicate Weights"/></TextBlock>
                </GroupBox.Header>
                <StackPanel>
                    <TextBlock TextWrapping="Wrap" Text="Number of replications:"/>
                    <TextBox x:Name="textBoxNRep" TextWrapping="Wrap" Width="50" Text="{Binding SelectedDatasetType.Nrep, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Left">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="{Binding SelectedDatasetType.Errors[Nrep]}" Foreground="Red"/>
                        </ToolTipService.ToolTip>
                        <ToolTipService.IsEnabled>
                            <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="Nrep"/>
                        </ToolTipService.IsEnabled>
                    </TextBox>
                    <TextBlock TextWrapping="Wrap" Text="Replication variance adjustment factor (argument fayfac in BIFIEsurvey):"/>
                    <TextBox x:Name="textBoxFayFac" TextWrapping="Wrap" Width="50" Text="{Binding SelectedDatasetType.FayFac}" HorizontalAlignment="Left">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="{Binding SelectedDatasetType.Errors[FayFac]}" Foreground="Red"/>
                        </ToolTipService.ToolTip>
                        <ToolTipService.IsEnabled>
                            <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="FayFac"/>
                        </ToolTipService.IsEnabled>
                    </TextBox>
                    <Rectangle Height="1" Stroke="Gray" Margin="0,10,0,10"/>
                    <TextBlock TextWrapping="Wrap" Text="Variables with replicate weights (regex):"/>
                    <TextBox x:Name="textBoxRepWeights" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.RepWgts, UpdateSourceTrigger=PropertyChanged}">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="{Binding SelectedDatasetType.Errors[RepWgts]}" Foreground="Red"/>
                        </ToolTipService.ToolTip>
                        <ToolTipService.IsEnabled>
                            <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="RepWgts"/>
                        </ToolTipService.IsEnabled>
                    </TextBox>
                    <TextBlock TextWrapping="Wrap" Text="OR"/>
                    <TextBlock TextWrapping="Wrap" Text="Variable indicating jackknife zones:"/>
                    <TextBox x:Name="textBoxJKZone" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.JKzone, UpdateSourceTrigger=PropertyChanged}" Width="200" HorizontalAlignment="Left">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="{Binding SelectedDatasetType.Errors[JKzone]}" Foreground="Red"/>
                        </ToolTipService.ToolTip>
                        <ToolTipService.IsEnabled>
                            <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="JKzone"/>
                        </ToolTipService.IsEnabled>
                    </TextBox>
                    <TextBlock TextWrapping="Wrap" Text="Variable indicating inclusion/exclusion within jackknife zone:"/>
                    <TextBox x:Name="textBoxJKRep" TextWrapping="Wrap" Text="{Binding SelectedDatasetType.JKrep, UpdateSourceTrigger=PropertyChanged}" Width="200" HorizontalAlignment="Left">
                        <ToolTipService.ToolTip>
                            <TextBlock Text="{Binding SelectedDatasetType.Errors[JKrep]}" Foreground="Red"/>
                        </ToolTipService.ToolTip>
                        <ToolTipService.IsEnabled>
                            <Binding Path="SelectedDatasetType.Errors" Converter="{StaticResource ResourceKey=DictionaryHasElementToBoolConverter}" ConverterParameter="JKrep"/>
                        </ToolTipService.IsEnabled>
                    </TextBox>
                    <CheckBox x:Name="checkBoxJKReverse" Content="Use reverse inclusion/exclusion?" Margin="0,5,0,5" IsChecked="{Binding SelectedDatasetType.JKreverse}"/>
                </StackPanel>
            </GroupBox>
        </Grid>
        <Grid Grid.Row="3" Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" x:Name="buttonExportDatasetType" Content="Export ..." IsEnabled="{Binding SelectedIndex, ElementName=comboBoxSelectDatasetType, Converter={StaticResource IndexToBoolConverter}}" HorizontalAlignment="Left" Height="22" Width="78" Click="ButtonExportDatasetType_Click"/>
            <Button Grid.Column="1" Content="Save" HorizontalAlignment="Right" VerticalAlignment="Top" Height="22" Width="78" Command="{Binding SaveSelectedDatasetTypeCommand, Mode=OneWay}">
                <Button.IsEnabled>
                    <MultiBinding Converter="{StaticResource BooleanAndConverter}">
                        <Binding Path="SelectedIndex" ElementName="comboBoxSelectDatasetType" Converter="{StaticResource IndexToBoolConverter}"/>
                        <Binding Path="SelectedDatasetType.IsChanged" FallbackValue="false"/>
                    </MultiBinding>
                </Button.IsEnabled>
            </Button>
        </Grid>
    </Grid>
</Window>
